{"version":3,"sources":["components/tax/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TaxLayout","styled","div","TaxTableWrapper","IncomeText","Col","RateText","CustomDivider","Divider","HeaderWrapper","TaxHeader","style","fontSize","fontWeight","margin","paddingTop","InputHeaderWrapper","props","color","TagWrapper","p","InputContentWrapper","InputFrame","input","CalculateBtn","Button","InputComponent","display","lineHeight","marginLeft","value","taxInput","onChange","event","inputChange","target","onBlur","buttonClick","onClick","taxSource","key","minimumIncome","maximumIncome","taxRate","ThresholdTable","marginTop","span","map","data","incomeRange","currencyFormatter","format","toFixed","TotalTaxWrapper","TaxLabel","h4","TotalTax","height","tax","ShadowCurrency","AnalyseTax","netIncome","incomePerWeek","TaxDisplay","marginRight","totalTax","ResultComponent","Intl","NumberFormat","currency","maximumFractionDigits","TaxCalculator","React","useState","incomeInput","setIncomeInput","calculateIncome","setCalculateIncome","showAlert","toggleAlert","calculateTotalTax","income","message","type","showIcon","intInput","replace","length","setTimeout","parseInt","gutter","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5bc3d40.chunk.js","sourcesContent":["import { Alert, Button, Col, Divider, Row } from 'antd'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst TaxLayout = styled.div`\n\twidth: 600px;\n\tborder: 7px solid #e2e2e2;\n\tmargin: 0 auto;\n\tmargin-top: 20px;\n\ttext-align: left;\n`\n\nconst TaxTableWrapper = styled.div`\n\tpadding: 0 20px;\n\tfont-family: Helvetica, Verdana, Arial, Sans-serif;\n`\n\nconst IncomeText = styled(Col)`\n\ttext-align: left;\n\tpadding: 5px;\n`\n\nconst RateText = styled(Col)`\n\ttext-align: right;\n\tpadding: 5px;\n`\n\nconst CustomDivider = styled(Divider)`\n\tmargin: 0;\n\tcolor: #cccccc;\n`\n\nconst HeaderWrapper = styled.div`\n\tpadding: 11px;\n`\n\nconst TaxHeader = () => (\n\t<HeaderWrapper>\n\t\t<h2 style={{ fontSize: '18px', fontWeight: 'bold', margin: 0 }}>Income Tax</h2>\n\t\t<p style={{ paddingTop: '11px', margin: 0, fontSize: '13px' }}>Please read important notes about the use of this calculator</p>\n\t</HeaderWrapper>\n)\n\nconst InputHeaderWrapper = styled.div`\n\theight: 36px;\n\twidth: 100%;\n\tbackground-color: ${props => props.color};\n\tcolor: white;\n\tborder-top-left-radius: 18px;\n  border-bottom-left-radius: 18px;\n\tdisplay: flex;\n\tfont-size: 13px;\n`\n\nconst TagWrapper = styled.p`\n\tbackground-color: #1998A6;\n\twidth: 36px;\n\theight: 36px;\n\tborder-radius: 18px;\n\ttext-align: center;\n\tline-height: 36px;\n`\n\nconst InputContentWrapper = styled.div`\n\tmargin: 25px 0 30px 15px;\n\tdisplay: flex;\n\tfont-size: 12px;\n\tfont-weight: bold;\n`\n\nconst InputFrame = styled.input`\n\tpadding: 3px 7px;\n\tmargin-left: 10px;\n`\n\nconst CalculateBtn = styled(Button)`\n\tbackground: -webkit-gradient(linear, left top, left bottom, from(#faca3b), to(#d8a819));\n\tcolor: white;\n\tfont-weight: bold;\n\tborder-radius: 5px;\n\tmargin-left: 15px;\n`\n\nconst InputComponent = (props: { taxInput: string, inputChange: (input: string) => void, buttonClick: () => void }) => {\n\treturn (\n\t\t<>\n\t\t\t<InputHeaderWrapper color='#727272'>\n\t\t\t\t<h3 style={{ display: 'flex', color: 'white' }}>\n\t\t\t\t\t<TagWrapper>1</TagWrapper>\n\t\t\t\t\t<p style={{ lineHeight: '36px', marginLeft: '15px', fontWeight: 'bold', fontSize: '13px' }}>Your details</p>\n\t\t\t\t</h3>\n\n\t\t\t</InputHeaderWrapper>\n\t\t\t<InputContentWrapper>\n\t\t\t\t<p>Your annual income\n\t\t\t\t<InputFrame value={props.taxInput} onChange={event => props.inputChange(event.target.value)} onBlur={props.buttonClick} />\n\t\t\t\t</p>\n\t\t\t\t<CalculateBtn onClick={props.buttonClick}>Calculate</CalculateBtn>\n\t\t\t</InputContentWrapper>\n\n\t\t</>\n\t)\n}\n\ntype taxData = {\n\tkey: string,\n\tminimumIncome: number,\n\tmaximumIncome: number | null,\n\ttaxRate: number\n}\n\nconst taxSource: taxData[] = [\n\t{ key: '1', minimumIncome: 0, maximumIncome: 18200, taxRate: 0 },\n\t{ key: '2', minimumIncome: 18201, maximumIncome: 45000, taxRate: 19 },\n\t{ key: '3', minimumIncome: 45001, maximumIncome: 120000, taxRate: 32.5 },\n\t{ key: '4', minimumIncome: 120001, maximumIncome: 180000, taxRate: 37 },\n\t{ key: '5', minimumIncome: 180001, maximumIncome: null, taxRate: 45 },\n]\n\nconst ThresholdTable = () => (\n\t<TaxTableWrapper>\n\t\t<h4 style={{ fontSize: '15px', fontWeight: 'bold', marginTop: '20px' }}>Current Tax Thresholds 2020-2021</h4>\n\t\t<Row>\n\t\t\t<IncomeText span={16}><span style={{ fontWeight: 'bold' }}>Income Range</span></IncomeText>\n\t\t\t<RateText span={8}><span style={{ fontWeight: 'bold' }}>Tax Rate</span></RateText>\n\t\t</Row>\n\t\t<CustomDivider />\n\t\t{taxSource.map(data => {\n\t\t\tconst incomeRange = `${currencyFormatter.format(data.minimumIncome)} - ${data.maximumIncome ? `${currencyFormatter.format(data.maximumIncome)}` : '+'}`\n\t\t\tconst taxRate = `${data.taxRate.toFixed(1)}%`\n\t\t\treturn (\n\t\t\t\t<div key={data.key}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<IncomeText span={16}>{incomeRange}</IncomeText>\n\t\t\t\t\t\t<RateText span={8}>{taxRate}</RateText>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<CustomDivider />\n\t\t\t\t</div>\n\t\t\t)\n\t\t})}\n\n\t</TaxTableWrapper>\n)\n\nconst TotalTaxWrapper = styled.div`\n\tbackground-color: ${props => props.color};\n\tmargin-bottom: 3px;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tpadding: 10px;\n`\n\nconst TaxLabel = styled.h4`\n\tfont-size: '14px';\n\tfont-weight: bold;\n\tcolor: #666666;\n\tmargin: 0;\n`\n\nconst TotalTax = (props: { tax: string }) => (\n\t<TotalTaxWrapper color='#eeeeee' style={{ height: '85px' }}>\n\t\t<TaxLabel>Tax on income</TaxLabel>\n\t\t<p style={{ fontSize: '36px', fontWeight: 'bold', margin: 0 }}>{props.tax}</p>\n\t</TotalTaxWrapper>\n)\n\nconst ShadowCurrency = styled.p`\n\tfont-size: 25px;\n\tcolor: #777777;\n\tmargin: 0;\n\tfont-weight: bold;\n\n`\n\nconst AnalyseTax = (props: { netIncome: string, incomePerWeek: string }) => (\n\t<TotalTaxWrapper color='#dddddd' style={{ height: '190px' }}>\n\t\t<div>\n\t\t\t<TaxLabel>Net income per annum</TaxLabel>\n\t\t\t<ShadowCurrency>{props.netIncome}</ShadowCurrency>\n\t\t</div>\n\t\t<div>\n\t\t\t<TaxLabel>Net income per week</TaxLabel>\n\t\t\t<ShadowCurrency>{props.incomePerWeek}</ShadowCurrency>\n\t\t</div>\n\t</TotalTaxWrapper>\n)\n\nconst TaxDisplay = (props: { totalTax: string, netIncome: string, incomePerWeek: string }) => (\n\t<div style={{ marginTop: '10px', marginRight: '10px' }}>\n\t\t<TotalTax tax={props.totalTax} />\n\t\t<AnalyseTax netIncome={props.netIncome} incomePerWeek={props.incomePerWeek} />\n\t</div>\n)\n\n\nconst ResultComponent = () => (\n\t<InputHeaderWrapper color='#444444'>\n\t\t<h3 style={{ marginLeft: '15px', lineHeight: '36px', color: 'white', fontWeight: 'bold', fontSize: '13px' }}>Your Result</h3>\n\t</InputHeaderWrapper>\n)\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n\tstyle: 'currency',\n\tcurrency: 'USD',\n\tmaximumFractionDigits: 0\n})\n\nconst TaxCalculator = () => {\n\n\tconst [incomeInput, setIncomeInput] = React.useState(85000)\n\tconst [calculateIncome, setCalculateIncome] = React.useState(incomeInput)\n\tconst [showAlert, toggleAlert] = React.useState(false)\n\tconst inputChange = (input: string) => {\n\t\tlet intInput = input.replace('$', '')\n\t\tintInput = intInput.replace(',', '')\n\t\tif (intInput.length > 7) {\n\t\t\ttoggleAlert(true)\n\t\t\tsetTimeout(() => toggleAlert(false), 3000)\n\t\t}\n\t\tsetIncomeInput(parseInt(intInput))\n\t}\n\n\tconst calculateTotalTax = () => {\n\t\tconst income = calculateIncome\n\t\tlet tax = 0\n\t\ttaxSource.map(data => {\n\t\t\tif (!!data.maximumIncome && income > data.maximumIncome) {\n\t\t\t\ttax = tax + (data.maximumIncome - data.minimumIncome + 1) * (data.taxRate / 100)\n\t\t\t} else if (income > data.minimumIncome) {\n\t\t\t\ttax = tax + (income - data.minimumIncome + 1) * (data.taxRate / 100)\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t\treturn tax\n\t}\n\n\tconst calculateAction = () => {\n\t\tsetCalculateIncome(incomeInput)\n\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showAlert && <Alert message='The number is too big!' type='warning' showIcon />}\n\n\t\t\t<TaxLayout>\n\t\t\t\t<TaxHeader />\n\t\t\t\t<InputComponent taxInput={currencyFormatter.format(incomeInput)} inputChange={inputChange} buttonClick={calculateAction} />\n\t\t\t\t<ResultComponent />\n\t\t\t\t<Row gutter={24}>\n\n\t\t\t\t\t<Col span={14}><ThresholdTable /></Col>\n\t\t\t\t\t<Col span={10}>\n\t\t\t\t\t\t<TaxDisplay\n\t\t\t\t\t\t\ttotalTax={currencyFormatter.format(calculateTotalTax())}\n\t\t\t\t\t\t\tnetIncome={currencyFormatter.format(calculateIncome - calculateTotalTax())}\n\t\t\t\t\t\t\tincomePerWeek={currencyFormatter.format((calculateIncome - calculateTotalTax()) / 52)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</TaxLayout>\n\t\t</>\n\t)\n}\n\nexport default TaxCalculator","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport TaxCalculator from './components/tax';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaxCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}